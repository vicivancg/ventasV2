<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="imgRic.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAgEBLAEsAAD/7gAOQWRvYmUAZAAAAAAB/+EASkV4aWYAAE1NACoAAAAIAAMBGgAF
        AAAAAQAAADIBGwAFAAAAAQAAADoBKAADAAAAAQACAAAAAAAAASwAAAABAAABLAAAAAEAAP/bAEMADAgI
        CAkIDAkJDBELCgsRFQ8MDA8VGBMTFRMTGBEMDAwMDAwRDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwM
        DP/bAEMBDQsLDQ4NEA4OEBQODg4UFA4ODg4UEQwMDAwMEREMDAwMDAwRDAwMDAwMDAwMDAwMDAwMDAwM
        DAwMDAwMDAwMDP/AABEIAFEBXgMBIgACEQEDEQH/xAAfAAABBQEBAQEBAQAAAAAAAAADAAECBAUGBwgJ
        Cgv/xACFEAABBAEDAgQCBQcGCAUDDDMBAAIRAwQhEjEFQVFhEyJxgTIGFJGhsUIjJBVSwWIzNHKC0UMH
        JZJT8OHxY3M1FqKygyZEk1RkRcKjdDYX0lXiZfKzhMPTdePzRieUpIW0lcTU5PSltcXV5fVWZnaGlqa2
        xtbm9jdHV2d3h5ent8fX5/f/xAAfAQABBQEBAQEBAQAAAAAAAAABAAIDBAUGBwgJCgv/xACCEQACAgEC
        BAQDBAUGBwcGBTUBAAIRAyExEgRBUWFxIhMFMoGRFKGxQiPBUtHwMyRi4XKCkkNTFWNzNPElBhaisoMH
        JjXC0kSTVKMXZEVVNnRl4vKzhMPTdePzRpSkhbSVxNTk9KW1xdXl9VZmdoaWprbG1ub2JzdHV2d3h5en
        t8f/3QAEABb/2gAMAwEAAhEDEQA/ALB/x14/bpb/APt0f+RUT/jrr7dLd87R/wCQXliSfQW2X1E/46/D
        pf8A4L/5im/8es/+Vf8A4L/5ivL0kqCrL6gf8dZnTpf/AIL/AOYpf+PW/wD8qx/27/5ivMEyVBVl9P8A
        /Hrf/wCVY/7d/wDMUv8Ax67P/Ksf9u/+YrzBJKgqy+n/APj12f8AlWP+3f8AzBL/AMet/wD5VD/t3/zB
        eYJJUFWX1D/x63f+VX/gv/mCb/x67P8AyqH/AG7/AOYLzBJKgqy+nH/HXdOnSm/9un/yCj/49eT/AOVb
        P+3T/wCQXmaSVBVl9M/8evK/8q6/+3T/AOQTf+PXl/8AlXX/ANun/wAgvNEkqCrL6X/49eX/AOVdf/bp
        /wDIJf8Aj15n/lXX/wBun/yC80SSoKt9KP8Ajrzu3S6v+3Xf+RTf+PV1D/ysq/7cd/5FebJ4/FKgqy+k
        f+PV1D/ysp/7cd/5FN/49XUP/Kyn/tx3/kV5uklQVZfR/wDx6epdumU/9uO/uTH/AB09U/8AK2j/AD3/
        ANy85SSpVvop/wAdHVv/ACuo/wA96if8c/WO2Bjj+09eeJJKt9E/8efrH/lfj/5z0v8Ax6Or/wDlfj/5
        z152kkq30T/x6Osf+V+P/nPTf+PP1n/yvxv85688SSVb6Gf8c/Wv+4GN/nP/AL0x/wAc/Wu2Bjf5z/71
        56kkq30H/wAebrn/AHBxvvf/AOSTH/HL13thYv8A0/8AyS8/SSVb35/xy9fPGHij/P8A/JJv/Hk+sP8A
        3Exfuf8A+TXAp4PgUlPef+PH9Y/+4uL9z/8AyaY/44vrJ2xsUf2X/wDk1wm137p+4p9j/wB0/cUtFavc
        /wDjxfWX/uPi/wCa7/yab/x4frN/oMX/ADXf+TXEenaTox3yaUhTeeK3n+yf7ktFavbH/HB9aP8ARYo/
        sO/8mmP+N/60/wCjxR/1s/8Ak1xgxco8U2H+w7+5Dc1zXFrgWuHIIgj5FJWr23/ju/Wqfo4w/wCtn/yS
        6+n669Xf/i8v+shFX26qwMaNvsg314/0N3+jsXjS9Gxv/wAjGX/xw/8AbqhBQL//0PMkl7r9XPqh9V8r
        6v8ATcm/peNZdbi0vse5gJc4saXOcf5Tk31n+qX1Zxfq51LIx+mY1V1WNa6uxtYDmuDSWuaU60U+FpL2
        v6ifVn6vZv1T6dlZfTsa/IsY71LX1tc5xD3t9ziPJb//ADP+qv8A5U4mv/As/wDIpcSqfnVJbn1w+rtn
        1e67fgwfs7j6uI896nH2f2qv5p69W+pf1b+r+V9VemZGT03GuvsoabLH1Mc5x19znOb7krRT4bolI8V9
        BdV+q/1br6VmPr6XiMezHtLXClgIIY4hwO1C+rP1f6Bf9Xel329NxbLX4lLnvdTWXFxraXOc4t9znJcS
        afApHilI8V9ID6t/V4cdLxP+2K//ACCkPq90AcdNxP8Ativ/AMghxeCqfm2R4pSPFe2/4x+kdJxvqb1C
        7Gwsem1or22V1Ma4TbWNHsaHLd6b0Lob+nYr3dOxS51NZJNNcklrf5CNqp+ddw8QlI8QvpP9g9DiP2di
        x/xNf/kEh0HoY46dij/rNf8A5BDiVT82bh4hNub4hex/XmzpeJ1joHSMXEx635GZTdkFtTAfTbY2uusw
        36Njy7/ttdr+yel/9w6P+2mf+RRtVPzPub4hOCDwZX0wOl9MHGJQP+ts/wDIqrn/AFX+rvUazXl9Ox7A
        fzhWGuH9WyvZY3/OQ4lU/OKUhdz9e/8AF27oDT1Lppdb0skCxjtX0k6N3O/wlLnfn/mLr/8AFPi41v1T
        3W0sscMm0S5oJj2+IRtVPi8pEgc6L6cGFhjiisf2G/3Jn4OE9u1+PU5p5BY0j8iHEqn5kSXuf1j/AMWf
        1f6vS+zDpb07OIJZdSNrC7/hqG/o3N/qe9eMdT6VmdKz7un5tZryaHbXt5B/dcw/nssb7mIgopprS6f9
        XOv9TbvwOn35FZ4sawhn/bj9ta9K+on+LTGxqa+qdfpF2U8B9GG8Syoch17Po2X/AMh3sqXorWhoDWgA
        DQAaABDiTT89ZH1I+t2Mwvt6VkbRqSxof/0anPcsV7H1vLHtLHtMOa4EEH+U0r6gWF9Zfqd0X6x47m5d
        IZlQRVmMAFjT+bLv8Kz/AIN6XEqn57aHFwDQS7sBqZRDRkkz6VknU+x39y6bpPQ87oP1+6b07OaBbXl1
        Frx9F7CfZbX/ACXr3aB4Ikqp+YX03VgGyt7AdAXNIH/SUF69/joH+Run/wDhk/8Ant68iSBQVkk6SKn0
        X/Ewxj+pdTa9od+hrOoB/Od4r1j0KP8ARt/zQvnn6u221XXOqe6t21urCWnn+Sux6Z9cOu9Pe39YdkVD
        mq/3gjwDz+kZ/nKvPNGMzEg+brcr8Hzcxysc+Kcblxfq5en5JcPzvq/p1/uN+4JbGfuj7lm9B+sGF1zG
        NuP7LWQLqHfSYT/1TP5a1FICCLGrnZMc8U5Y8kTCcTUolba3wCW0eCdJFYpfPf15/wDFh1b/AMMH8jV9
        CL58+vQ/7MOrf+GD/wBS1EILgr0XFP8A65jM/wCOH/t1QvOl6Li//kZzP+PH/t1QigP/0e++qJn6r9J/
        8KU/9Q1L63Cfqv1b/wAKXf8AUOTfU/8A8S3Sf/ClP/UNUvrZ/wCJjq3/AITu/wCocj1U5/8Ai3/8RXTP
        6j//AD7aumXMf4tTP1K6b/Vs/wDPtq6dAqeR/wAZX1ZPW+hnIxmb8/p820gcuZ/h6f8ANG9n8tiv/ULX
        6ndKj/QD8rlvoGHh4+FjtxsZnp0sLixg4G5xsIb/AGnJKRdYE9JzR449v/UOXE9A/wAZ31VwOhYGHkWX
        +tjY1VVgbU4jcxjWP2u/rBdx1TXpmWP+As/6hy+aB9EfBEIL9NYOZTnYdGbRJpya2217hB2vG9u5vzSz
        synBwr82+fRxq3W2bRJ2sG921vyVD6pmfqx0o/8AdSn/AKhqn9ZgD9XOqA/9xL//AD29BLwP10/xjfVz
        rX1ZzOm4Zv8AtF4Z6e+va32vZYdzt37rF6N0gz0rCPjj1f8AUNXzQfoH4L6W6N/yPg/+F6v+oaiUBXV7
        uo0dMyLumUtyc5jCcel5hrnfuu9zP+rXHft3/GueOhYo/tj/AN6l3qZzg0FzjAAkk9gELS+IdVu6/d9f
        en3dfpZj5tl+KRRW4OaysPa1kbX3bd0Pf7nr3BeB39WPV/r5X1Incy7Pq9Kf9G2xldP/AIG1q98RKg89
        9euuZ3QegP6jgbDey2tsWN3NLXO2u0BarP1T66/r/QsfqllPoWW7mvYJ27mONbnVk/4N21Xuo9MwOqY3
        2XqFDcnHLg81v1buaZaUemmmiptNDG1VVgNZWwBrQB+a1rUFNbrGNTl9KzMa8B1VtFjXg8QWlcr/AIov
        /El/6FW/kYp/4x/rfjdJ6Vd0zGsDup5jDXsaZNVbhtsus/d9ntqQ/wDFD/4k3Adsq38laKnt1wvSPrt1
        W769Zf1dya2XYoutZTYxsPrFY3t9SDtfXptXdKpjdK6biZN+XjY1dWTkuLr7mtAe8n99/wBJBTbXI9e+
        rmL1H679GzLGBzaqbrbx+96Dq/s2/wDe23ZC65cn0r6w43Vvr3m4uM8WU4GF6TXtMh1nqtdkln9T9FX/
        AGElPWLK+sH1l6T9XcVuT1Kwt9Q7aqmDdY8jn02fyfznLVXkn+ObGyx1bAy3AnEdQaq3fmiwOc+xv9Z7
        HVpBT2HQf8ZP1e63mtwGeriZNhilt4ADz+4x9brG+p/IcurXzZ0nGy8rquHj4Yccmy5npbeQQ4O3/wDW
        /pr6SRKnmvrd0ivIzuh9Va39Pg59LXOHJqteGOaf6tvprpln9acxuHXu0nJxg34m+natBBT55/jo/wCR
        cD/w0f8Az29eQr1//HPH7Dwf/DX/AKLsXj8jxThstK6SSSKHU6D/ADt39UflWzKxug/zt39UflWyqHMf
        zh+j2nwH/cGP+9P/AKZdHoXVbek9TpzGEhjXbbm9nVn+cb/35exNc1zQ5plrhIPkV4Z2K9q6YHN6biB/
        0hTWHfHa1P5Un1Dtq0P+MmKIOHKPnlxQl/WjH1RbSSSSsvOqXz79exH1w6t/x/8A31i+gl8/fX3T649V
        /wCP/wC+sRCC4C9DxD/65nN/48f+3WOvPF6Hhn/1zWd5ZDf/AG5x0UB//9Lu/qZ/4k+k/wDhWr/qUb60
        ifq11Uf907//AD29VvqXdUPqn0kOe0H7LXoSB2R/rLbS76u9UaHtJOJfAkf6N6PVTm/4szP1J6d8Lf8A
        z7aulun0Xxodpgj4Llf8WmTQz6ldPD7GNP6XQuAP87Z4rpbMzELHD165IIje3w+KVKed/wAXv1q/5wdI
        9PJdPUcGK8meXj/BZH/XI9//AAq6pfOv1c+sOV9XetV9Rx/c1pLL6u1lRP6Sv/v1f8te+YfWulZmLVl0
        ZVRqvYLGEvaDDhPuaT7XJEIBS9S16dlD/gbP+pcvmcfRHwX0jn9Q6ecHIaMmkk1PAHqN/dP8pfNo4RCi
        /RX1QM/VbpP/AIUp/wCoajfWSf8Am91SP+4l/wD57eqP1Qz8Kv6rdKbZkVMcMWoEOe0EQ0eJR+v9R6e/
        oXUWMyqXOdi3BoFjZJNb+PchSX52P0D8F9KdE16L08/91qf/AD2xfNf5nyX0P0brfRqui4Dbc/GY5uNS
        HNdcwEEVs9pBciQgNvr2Bk9R6Nl4OJb9nyMiosqukja4/nbq/f8A5q87P+Kz63uaWv660tIgg2XkflXo
        f/OP6v8A/lnif9v1/wDk1E/Wb6ud+qYf/b9f/k0NfFWj5Zlf4vcz6s5XTuoZedRa052PWymtrg5xdY06
        b/3GN3L2ZeSfX/6zYnUPrZ0nHxcmu3BwLKrH3McHV732MdY71G+z9FUxq9FP1s+rA/71sP8A7eZ/5JKi
        qwm6x1inpP2N+RApyslmK55MbDYH+m//ALdYxi0F5z/jR690TqH1abRg59GTcMmt3p1WNc6ALJdtYfzZ
        V36o/wCMbot/Q6R1rNrxs/HHpW+oSDYG/Qvb/wAYz6f/AAiVFNub/jU+p4srd9ZMBn6WsAZ9bR9Jo9rc
        n+tX9G3/AIP/AItaf+KD/wASj/8Aw3b/ANTUtaz6+fUp7HV2dUx3scC1zTJBB0c0jasr6qdc+pXRMbMw
        8Xq1H2R2S6+gPcWlrbGs/Q/pA3f6T2O/sJUeytHt15h1T/G9nYOfl4Tem1PONdZU15tcJDHFm5zdn8ld
        n/z3+qP/AJbYv/bgXhXX7qbuu9RuoeLKbMm59djTLXNc9zmub/WSA8EEu31v/GX9Z+sVOx/UZhY7xD68
        YFpcD+a+5xdb/mbFT+pPXW9C+smLm2mMZxNOQfCuz2l//W3bLFgJJyLfqBrmuaHNIc1wkEaggoGdgYXU
        MZ2LnUMyaH/SrsaHN+Oq8j+pH+My3o9bOmdY3ZHT2+2m5vuspH7hb/haP/BK16t0zrnSOrVC7p2XVksP
        ZjhuH9es/pGf22ppCbQ9K+rPQOj2Ot6bg1Y1rxDrGiXR+7vfuc1q1EO6+mhhsusbUxupc8hoHxc5cT9Z
        v8avRunVPo6O4dQzeGvb/MMP7z7f8Lt/cq/7cQpNpvrr16tnXug9CpcDbZm0ZGSB+axr4pY7/jH+/wD6
        2u0Xzt0vrD7frRh9V6peXO+11XZN79YAe1znafmMYPotXsv/AI431K/8tK/82z/0mjRRbuZeBg5zG15u
        PVksadzW3Ma8A8bgHhy4v/GZjdF6T9Vrfs2Di05GXYyit7KmNcJPqWOY5rd383WtY/4yPqUP+9Nn+ZZ/
        6TXnv+ND619O69k4NHS7/tGLjMe97wHNHqPO3bFjWO9lbP8AwRIDwVbwxSSSTlrqdC/nrf6g/KtlZv1V
        wM3Py7qsOh99jaw5zWCSBujcV3XTPqB1rKeDmbcKn84uIc+P5NbP+/vVHPCUspoE7PWfB+b5fB8Pj7uW
        MKlP0k+v5v3Pnc36tdGs6v1WrHg+hWRZkO7BgP0f+ufQXroAAgaAKl0jo+D0fFGNhsgHWyx2r3u/ee5X
        lPix8Eddzu43xTn/AL5mBiCMWMcOMHf+tM/3lJJJKRz1L5/+v4j65dV/44f9QxfQC8A/xg/+LLqn/Gt/
        6itEILzq9Dw//wAjWd/4Yb/7c4688XoWEZ/xN548Mlv/ALc4yKA//9PzOT4lKT4lNI8UpHinrFJJSPFK
        R4pKUlASkeKUjxSUraPBJPv0idE0jxSUqB4JbW9glI8UpHiklSUDwCUjxSkeKSlQPBKB4JSPFKR4pKUl
        ASkeKUjxSQpJKR4pSPFJKkkpHilI8UlKSSkeKUhJSk6aQlISUpO0lp3NJa7xBg/gmkJJKZvtts/nHuf/
        AFnF3/VKCSWqSlJJa+CeD4FJSySeD4H7koPgfuSUskn2u/dP3FPsf+677ikp6v8Axc/Wbpn1c6plZXUj
        YK7qBUz027zu3tfr/Zau/wD/AB3vqj/3a/7Z/wDM14r6Vv7jv80p/Ru/0b/80/3IUFavtH/jv/VHwyj/
        ANZ/8zTf+PB9Uv3cv/tof+lF4yKLz/gn/wCa7+5L7Nk/6Gz/ADHf3JUE6vsp/wAcP1U/0eWf+tN/9KqJ
        /wAcf1W7U5h/62z/ANLLx37Llf6Cz/Md/cn+x5n/AHHt/wC23f8AkUqCtX2A/wCOT6sf9x8z/ttn/pZe
        X/WnquP1j6wZvU8Vr20ZLw5jbAA4ANaz3Bpf+6qH2HO/7jXf9tv/APIp/wBn9QPGLf8A9tP/APIpaI1Q
        L0HC/wDyN5//AIZb/wC3OMuHHS+pnjDyD8Kn/wDkF3+Hg5w/xQ52Oce0XuyGkUljt5H2jHdpXG/6ISSA
        /wD/1NxJeHJIofcUl4ckkp9xSXhySSn3FMvD0klPuKZeHpJKfcUl4ckkp9xSXhySSn3FJeHJJKfcUl4c
        kkp9xSXhySSn3IcJLw1JBc+6DspDleEpJpXPvI4RaOfkV4CkmlL9AM5RWcfNfPSSaVF+iu4RGr5xSRih
        +lK0qvp2L5rSTyh+m6+B8AiBfMCSSn6iHCl2Xy2kkUP1MOFJfK6SQU/VITr5VSTkP1UkvlVJJT9VJl8r
        JJKf/9k=
</value>
  </data>
</root>